// to create a Redux store
import { configureStore } from "@reduxjs/toolkit";

// to automatically enable features like refetching on reconnect or focus
import { setupListeners } from "@reduxjs/toolkit/query";

// API service we created (productApi)
import { productsApi } from "./service/dummyData";


// store holds our application state and connects middleware/reducers to Redux DevTools and React.
export const store = configureStore({
  
  // reducer section:
  // dynamically adding the reducer generated by RTK Query under a key (reducerPath).
  // This is where RTK Query stores all the API data (cache, metadata, loading states).
  reducer: {
    [productsApi.reducerPath]: productsApi.reducer,
    // if reducerPath is "products", data will be stored in state.products
  },

  // middleware section:
  // RTK Query needs its own middleware to track requests, caching, invalidation, etc.
  // We concatenate it to the default Redux middleware stack.
  middleware: (getDefaultMiddleware) =>
    getDefaultMiddleware().concat(productsApi.middleware),
});

setupListeners(store.dispatch);
